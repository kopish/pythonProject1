# Сравнение последовательностей
print((1, 2, 3) < (1, 2, 4))
print([1, 2, 3] < [1, 2, 4])

print('ABC' < 'C' < 'Pascal' < 'Python')

print((1, 2, 3, 4) < (1, 2, 4))
print((1, 2) < (1, 2, -1))
print((1, 2, 3) == (1.0, 2.0, 3.0))
print((1, 2, ('aa', 'ab')) < (1, 2, ('abc', 'a'), 4))

# Python 2
# [1, 'two'] < ['two', 1]  # True
# Python 3
# [1, 'two'] < ['two', 1]  # TypeError: '<' not supported between instances of 'int' and 'str'

'''
Кортежи и списки сравниваются лексикографически с использованием сравнения соответствующих элементов. Это означает, что
для сравнения равных, каждый элемент должен сравнивать равные, и две последовательности должны быть одного типа и иметь 
одинаковую длину.

Если не равны, последовательности располагаются так же, как их первые отличающиеся элементы. Например, 
cmp ([1, 2, x], [1, 2, y]) возвращает то же самое, что и cmp (x, y). Если соответствующий элемент не существует, 
сначала упорядочивается более короткая последовательность (например, [1,2] < [1,2,3]).

Из этого следует:
'''
a = (100, 0)
b = (50, 50)
a > b
# True
# Сравнение всех элементов двух кортежей по порядку, поэтому функционально (используя значения сверху):
a > b
# (True, False) #returned tuple containing each comparison
# all(a > b)
# False
