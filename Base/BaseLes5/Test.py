'''Антонина в целях экономии памяти компьютера вместо последовательности чисел от 1 до миллиона в виде списка решила
создать ленивый итератор numbers с помощью функции range(). Затем в двух разных местах своего скрипта она делала
проверку того, есть ли число 2000 в этой коллекции.
В первом случае код вернул True, а во втором False.'''
# numbers = iter(range(1, 1000001))
# print(2000 in numbers)
# print(2000 in numbers)
'''В данном случае не было никакого смысла создавать итератор, так как функция range() изначально создает ленивый 
итерабельный объект, который занимает практически такой же объем памяти.'''

# Решение:
import sys

numbers = iter(range(1, 1000001))
print(sys.getsizeof(numbers))
numbers = range(1, 1000001)
print(sys.getsizeof(numbers))
'''
Как видно, 32 или 48 байт в памяти – никакой разницы, она никак не почувствуется.

Значение False при втором обращении к итератору объясняется тем, что он уже «истощился» – там больше нет числа 2000, 
как и всех предыдущих, которые меньше.

print(next(numbers))
'''
