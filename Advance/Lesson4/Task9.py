'''
Добавление одной или нескольких строк в таблицу SQLite.
Добавление целых чисел, строк, чисел с плавающей точкой, с двойной точностью, а также значений datetime в таблицу
SQLite.
Использование запросов с параметрами для добавления переменных Python в качестве динамических данных в таблицу.
Перед выполнением следующих программ нужно убедиться, что вам известны название таблицы, а также информация о ее
колонках.


-----------------Вставка строки в таблицу SQLite---------------------------

Сейчас таблица sqlitedb_developers пустая, и ее нужно заполнить. Для этого необходимо выполнить следующие шаги:

Установить SQLite-соединение из Python.
Создать объект Cursor с помощью объекта соединения.
Создать INSERT-запрос. Для этого нужно знать таблицу и подробности о колонках.
Выполнить запрос с помощью cursor.execute().
После успешного завершения нужно не забыть выполнить коммит изменений в базу данных.
Также важно не забыть перехватить исключения SQLite.
Наконец, следует проверить результат, вернув данные из таблицы.
'''

import sqlite3


try:
    # Устанавливаем соединение с БД
    sqlite_connection = sqlite3.connect('sqlite_python.db')
    # Получение объекта cursor из объекта соединения
    cursor = sqlite_connection.cursor()
    print("Подключен к SQLite")
    # INSERT-запрос для вставки данных в таблицу. В нем указываются названия колонок и их значения.
    # Всего в таблице 5 колонок:
    sqlite_insert_query = """INSERT INTO sqlitedb_developers
                          (id, name, email, joining_date, salary)
                          VALUES
                          (10, 'Oleg1', 'oleg04@gmail1.com', '2020-11-19', 5100);"""
    # С помощью метода execute() объекта сursor выполняется запрос INSERT
    count = cursor.execute(sqlite_insert_query)
    # Сохраняем изменения в БД
    sqlite_connection.commit()
    # Получение количества отредактированных строк:
    print("Запись успешно вставлена ​​в таблицу sqlitedb_developers ", cursor.rowcount)
    cursor.close()

except sqlite3.Error as error:
    print("Ошибка при работе с SQLite", error)

finally:
    # Выполняем закрытие объектов cursor и соединения
    if sqlite_connection:
        sqlite_connection.close()
        print("Соединение с SQLite закрыто")

# Теперь можно проверить результат, посмотрев таблицу через программу DB Browser.