# Cоздание файла базы данных sqlite_python.db и вывод подробностей о версии SQLite

# Подключаем модуль sqlite3
import sqlite3

try:
    # С помощью метода connect() выполняется подключение к базе данных. Этот метод возвращает объект подключения SQLite
    # Метод connect() принимает разные аргументы. В данном примере передается название базы данных
    sqlite_connection = sqlite3.connect('sqlite_python.db')
    # Объект connection не является потокобезопасным. Модуль sqlite3 не позволяет делиться подключением между потоками.
    # Если попытаться сделать это, то можно получить исключение
    # С помощью объекта соединения создается объект cursor, который позволяет выполнять SQLite-запросы из Python.
    # Для одного соединения можно создать неограниченное количество cursor. Он также не является потокобезопасным.
    # Модуль не позволяет делиться объектами cursor между потоками. Если это сделать, то будет ошибка.
    cursor = sqlite_connection.cursor()
    print("База данных создана и успешно подключена к SQLite")

    sqlite_select_query = "select sqlite_version();"
    # Cоздание запроса для получения версии базы данных
    # С помощью метода execute объекта cursor можно выполнить запрос в базу данных из Python. Он принимает
    # SQLite-запрос в качестве параметра и возвращает resultSet — то есть, строки базы данных
    cursor.execute(sqlite_select_query)
    # Получение результата запроса из resultSet можно с помощью метода fetchAll()
    record = cursor.fetchall()
    print("Версия базы данных SQLite: ", record)
    # Хорошей практикой считается закрывать объекты connection и cursor после завершения работы, чтобы избежать
    # проблем с базой данных:
    cursor.close()

# С помощью класса sqlite3.Error можно обработать любую ошибку и исключение, которые могут появиться при работе
# с SQLite из Python. Это позволит сделать приложение более отказоустойчивым. Класс sqlite3.Error позволит понять
# суть ошибки. Он возвращает сообщение и код ошибки.
except sqlite3.Error as error:
    print("Ошибка при подключении к sqlite", error)
finally:
    if sqlite_connection:
        sqlite_connection.close()
        print("Соединение с SQLite закрыто")
