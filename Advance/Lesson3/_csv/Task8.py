'''
Диалекты
Чтобы каждый раз не указывать формат входных и выходных данных, определенные параметры форматирования сгруппированы в
диалекты (dialect). При создании объекта reader или writer программист может указать нужный ему диалект, кроме того,
некоторые параметры диалекта можно переопределить вручную, также указав их при создании объекта.

Для создания диалекта используется команда:

register_dialect("имя", delimiter = "\t", ...)

Класс Dialect позволяет определить следующие атрибуты форматирования:

Атрибут             -   Значение
delimiter           -   Устанавливает символ, с помощью которого разделяются элементы в файле. По умолчанию
используется запятая.
doublequote         -   Если True, то символ quotechar удваивается, если False, то к символу qutechar добавляется
ecsapechar в качестве префикса.
escapechar          -   Строка из одного символа, которая используется для экранирования символа-разделителя.
lineterminator      -    Определяет разделитель для строк, по умолчанию используется «\r\n»
quotechar           -   Определяет символ, который используется для окружения символа-разделителя. По умолчанию
используются двойные кавычки, то есть quotechar = ‘ » ‘.
quoting             -   Определяет символ, который используется для экранирования символа разделителя (если не
используются кавычки).
skipinitialspace    -   Если установить значение этого параметра в True, то все пробелы после символа-разделителя
будут игнорироваться.
strict              -   Если установить в True, то при неправильном вводе CSV будет возбуждаться исключение Error.
'''

import csv

csv.register_dialect('my_dialect', delimiter=':', lineterminator="\r")
with open("data/file6.csv", mode="w", encoding='utf-8') as w_file:
    file_writer = csv.writer(w_file, 'my_dialect')
    file_writer.writerow(["Имя", "Класс", "Возраст"])
    file_writer.writerow(["Женя", "3", "10"])
    file_writer.writerow(["Саша", "5", "12"])
    file_writer.writerow(["Маша", "11", "18"])